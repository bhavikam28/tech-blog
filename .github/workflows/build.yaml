name: Blog Release to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: "us-east-1"

jobs:
  Infra_job:
    name: AWS Infrastructure Provisioning with Terraform
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: terraform
    outputs:
      s3_bucket: ${{ steps.tf_out.outputs.s3 }}
      cf_id: ${{ steps.tf_out.outputs.cfid }}
      cf_domain_name: ${{ steps.tf_out.outputs.cfdomain }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Terraform Workflow
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.3"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        id: Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        id: tf_out
        run: |
          echo "s3=$(terraform output s3_bucket | tr -d '""')" >> "$GITHUB_OUTPUT"
          echo "cfid=$(terraform output cloudFront_ID | tr -d '""')" >> "$GITHUB_OUTPUT"
          echo "domain=$(terraform output cloudFront_domain_name | tr -d '""')" >> "$GITHUB_OUTPUT"

  build_job:
    name: Build
    needs: [Infra_job]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build
        run: hugo --minify

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tech-blog
          path: public/*

  deploy_job:
    name: Publish
    needs: [build_job, Infra_job]
    runs-on: ubuntu-22.04
    env:
      S3_BUCKET: ${{ needs.Infra_job.outputs.s3_bucket }}
      DISTRIBUTION_ID: ${{ needs.Infra_job.outputs.cf_id }}
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: tech-blog

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}

      - name: Sync blog content to S3 bucket
        run: |
          aws s3 sync . s3://${{ env.S3_BUCKET }} --delete

      - name: Create CloudFront Invalidation
        run: |
          aws cloudfront create-invalidation \
          --distribution-id ${{ env.DISTRIBUTION_ID }} \
          --paths "/*"
